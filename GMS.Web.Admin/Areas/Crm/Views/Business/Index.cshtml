@using GMS.Framework.Contract
@using GMS.Framework.Utility
@using GMS.Framework.Web.Controls
@using GMS.Framework.Contract
@using GMS.Framework.Web.Controls
@using GMS.Crm.Contract
@using GMS.Web
@{
    ViewBag.Title = "业务跟单查询";
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    DateTime endDate = (DateTime)ViewData["endDate"];
    DateTime startDate = (DateTime)ViewData["startDate"];

    double RANGE = ((DateTime)ViewData["endDate"] - (DateTime)ViewData["startDate"]).TotalDays;
}

@model IEnumerable<BusinessVM>

@section PageSpecificStyleSheetIncludes{
    <style type="text/css">
        select {
            margin: 1px;
            width: 150px;
        }

        .error {
            color: red;
            margin-left: 10px;
        }

        #divData th {
            word-break: keep-all;
            word-wrap: inherit;
            min-width: 120px;
        }
    </style>
}

@*@functions
    {
    }*@

@section PageSpecificJavascriptIncludes{
    <script type="text/javascript" src="@Url.StaticFile("/assets/jquery-validation/dist/jquery.validate.min.js")"></script>
    <script type="text/javascript">
        Date.prototype.format = function (fmt) { //author: meizz
            var o = {
                "M+": this.getMonth() + 1,                 //月份
                "d+": this.getDate(),                    //日
                "h+": this.getHours(),                   //小时
                "m+": this.getMinutes(),                 //分
                "s+": this.getSeconds(),                 //秒
                "q+": Math.floor((this.getMonth() + 3) / 3), //季度
                "S": this.getMilliseconds()             //毫秒
            };
            if (/(y+)/.test(fmt))
                fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
            for (var k in o)
                if (new RegExp("(" + k + ")").test(fmt))
                    fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
            return fmt;
        }
        Date.prototype.dateAdd = function (strInterval, Number) {
            var dtTmp = this;
            switch (strInterval) {
                case 's': return new Date(Date.parse(dtTmp) + (1000 * Number));
                case 'n': return new Date(Date.parse(dtTmp) + (60000 * Number));
                case 'h': return new Date(Date.parse(dtTmp) + (3600000 * Number));
                case 'd': return new Date(Date.parse(dtTmp) + (86400000 * Number));
                case 'w': return new Date(Date.parse(dtTmp) + ((86400000 * 7) * Number));
                case 'q': return new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + Number * 3, dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds());
                case 'm': return new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + Number, dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds());
                case 'y': return new Date((dtTmp.getFullYear() + Number), dtTmp.getMonth(), dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds());
            }
        }
        //$.validator.setDefaults({
        //    submitHandler: function () {
        //        //alert("提交事件!");
        //    }
        //});
        var range = 0;
        $(document).ready(function () {
            var dates = $("#start, #end").datepicker({
                dateFormat: "yy-mm-dd",
                defaultDate: "-1w",
                changeMonth: true,
                numberOfMonths: 2,
                onSelect: function (selectedDate) {
                    var option = this.id == "start" ? "minDate" : "maxDate",
                    instance = $(this).data("datepicker"),
                    date = $.datepicker.parseDate(
                        instance.settings.dateFormat ||
                        $.datepicker._defaults.dateFormat,
                        selectedDate, instance.settings);
                    dates.not(this).datepicker("option", option, date);
                }
            });
            $("#search").validate({
                rules: {
                    startDate: {
                        required: true,
                        dateISO: true
                    },
                    endDate: {
                        required: true,
                        dateISO: true
                    }
                },
                messages: {
                    startDate: {
                        required: "请输入开始时间",
                        dateISO: "请输入正确的时间格式"
                    },
                    endDate: {
                        required: "请输入结束时间",
                        dateISO: "请输入正确的时间格式"
                    }
                },
                submitHandler: function (form) {
                    var start = $("#startDate").datepicker("getDate");
                    var end = $("#endDate").datepicker("getDate");
                    $("th[b='bns'],td[b='bns']").detach();
                    //rendHead(start, end);
                    form.submit();
                    //getData(start.format("yyyy-MM-dd"), end.format("yyyy-MM-dd"));
                }
            });
            $('#tbbusiness').dataTable().fnDestroy();
            $("#tbbusiness").DataTable({
                "bServerSide": false,//服务端处理分页
                'bPaginate': true,  //是否分页。
                'bFilter': true,  //是否使用内置的过滤功能
                'bLengthChange': true, //是否允许自定义每页显示条数.
                "bProcessing": true, //DataTables载入数据时，是否显示‘进度’提示
                "bFilter": true, //是否启动过滤、搜索功能
                "oLanguage": { //国际化配置
                    "sProcessing": "正在获取数据，请稍后...",
                    "sLengthMenu": "显示 _MENU_ 条",
                    "sZeroRecords": "没有您要搜索的内容",
                    "sInfo": "从 _START_ 到  _END_ 条记录 总记录数为 _TOTAL_ 条",
                    "sInfoEmpty": "记录数为0",
                    "sInfoFiltered": "(全部记录数 _MAX_ 条)",
                    "sInfoPostFix": "",
                    "sSearch": "搜索",
                    "sUrl": "",
                    "oPaginate": {
                        "sFirst": "第一页",
                        "sPrevious": "上一页",
                        "sNext": "下一页",
                        "sLast": "最后一页"
                    }
                },
                "columnDefs": [{ //数据渲染
                    "render": function (data, type, row) {
                        alert(1);
                        return '<div class="text-indentation-s" title="' + data + '">' + data + '</div>';
                    },
                    "targets": 0
                }, {
                    //"visible": false,
                    "render": function (data, type, row) {
                        return '<div class="text-indentation-b" title="' + data + '">' + data + '</div>';
                    },
                    "targets": [1]
                }],
                initComplete: function () {
                    this.api().columns().every(function () {
                        var column = this;
                        var select = $('<select><option value=""></option></select>')
                            .appendTo($(column.footer()).empty())
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>')
                        });
                    });
                }
            });

            $("#tbbusiness").wrap("<div class='wrap' style='overflow:auto; min-height:200px;'></div>");
        });

        function rendHead(start, end) {
            range = (end - start) / 86400000;
            if (range >= 0) {
                var headhtml = "";
                for (var i = 0; i <= range; i++) {
                    headhtml += "<th b='bns'>" + start.dateAdd("d", i).format("M-dd") + "</th>";
                }
                $(headhtml).appendTo("#tbhead");
            }
        }
        function getData(dStart, dEnd) {
            $.ajax({
                "url": "/Crm/Business/Index",
                "data":
                    {
                        start: dStart,
                        end: dEnd
                    },
                "success": function (json) {
                    fnCallback(json, dStart, dEnd);
                },
                "cache": false,
                "type": "POST",
                "error": function (xhr, error, thrown) {
                    if (error == "parsererror") {
                        alert(oSettings, 0, "DataTables warning: JSON data from " +
                            "server could not be parsed. This is caused by a JSON formatting error.");
                    }
                }
            });
        }
        String.prototype.toDate = function () {
            var dateMilliseconds;
            if (isNaN(this)) {
                //使用正则表达式将日期属性中的非数字（\D）删除
                dateMilliseconds = this.replace(/\D/igm, "");
            } else {
                dateMilliseconds = this;
            }
            //实例化一个新的日期格式，使用1970 年 1 月 1 日至今的毫秒数为参数
            return new Date(parseInt(dateMilliseconds));
        };
        function fnCallback(json, start, end) {
            var bodyhtml = "";
            $.each(json, function (i, item) {
                bodyhtml += "<tr>";
                bodyhtml += "<td b='bns' style='font-size:10px;'>" + item.Customer.Name + "</td>";
                for (var j = 0; j <= range; j++) {
                    if (item.Business == null || item.Business.length <= 0) {
                        bodyhtml += "<td b='bns' style='font-size:10px;'>" + "" + "</td>";
                    }
                    else {
                        for (var i = 0; i < item.Business.length; i++) {
                            var creat = item.Business[i].CreateTime.toDate();
                            bodyhtml += "<td b='bns' style='font-size:10px;'>" + (creat - start) + "</td>";
                            if (creat - start == 86400000 * j) {
                                var msg = item.Business[i].Message;
                                bodyhtml += "<td b='bns' style='font-size:10px;'>" + item.Business[i].Message + "</td>";
                            }
                            else {
                                bodyhtml += "<td b='bns' style='font-size:10px;'>" + "" + "</td>";
                            }
                        }
                    }
                }
                bodyhtml += "</tr>";
            });

            $(bodyhtml).appendTo("#tbbody");
            $('#tbbusiness').dataTable();
        }
    </script>

}
<div class="row-fluid">
    <div class="span11">
        @using (Html.BeginForm(null, null, null, FormMethod.Post, new { id = "search", @class = "form-inline" }))
        {
            <div class="p5">
                <label>开始时间：</label>@Html.TextBox("start", ((DateTime)ViewData["startDate"]).ToString("yyyy-MM-dd"), new { @class = "m-wrap small" })&nbsp;
                <label>结束时间：</label>@Html.TextBox("end", ((DateTime)ViewData["endDate"]).ToString("yyyy-MM-dd"), new { @class = "m-wrap small" })&nbsp;

                <button type="submit" class="btn">搜索<i class="icon-search"></i></button>
            </div>
        }
    </div>
</div>
<div id="divData" class="row-fluid">
    <table class="table table-striped table-hover" id="tbbusiness">
        <thead>
            <tr id="tbhead">
                <th>
                    <span style="width:200px;display:inline-block">客户名</span>
                </th>
                <th>
                    类型
                </th>
                <th>
                    联系人
                </th>
                <th>
                    联系电话
                </th>
                <th>
                    联系人性别
                </th>
                <th>
                    年龄
                </th>
                <th>
                    业务员
                </th>
                <th>
                    业务统计<br />(此时间段)
                </th>

                @for (int x = 0; x <= RANGE; x++)
                {
                    <th>
                        <span>@(((DateTime)ViewData["startDate"]).AddDays(x).ToString("yyyy-MM-dd")) </span>
                    </th>
                }

            </tr>
        </thead>
        <tbody id="tbbody">
            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr>
                        @if (item.Customer != null)
                        {
                            <td class="blue">
                                <span>@item.Customer.Name</span>
                            </td>
                            <td>
                                <span>@EnumHelper.GetEnumTitle((EnumCategory)item.Customer.Category)</span>
                            </td>
                            <td class="blue">
                                <span>@item.Customer.Contacter</span>
                            </td>
                            <td>
                                <span>@item.Customer.Tel</span>
                            </td>
                            <td>
                                <span>@EnumHelper.GetEnumTitle((EnumGender)item.Customer.Gender)</span>
                            </td>

                            <td>
                                <span>@EnumHelper.GetEnumTitle((EnumAgeGroup)item.Customer.AgeGroup)</span>
                            </td>
                            <td class="green">
                                <span>@(item.Customer.Staff == null ? "没有分配" : item.Customer.Staff.Name)</span>
                            </td>
                            <td class="green">
                                <span>@((item.Business == null || item.Business.Count() == 0) ? "没有业务" : item.Business.Count().ToString() + " 次业务")</span>
                            </td>
                        }
                        else
                        {
                            <td></td>
                        }

                        @for (int x = 0; x <= RANGE; x++)
                        {
                            if (item.Business != null)
                            {
                                var msg = item.Business.FirstOrDefault(o => ((int)(o.CreateTime - startDate).TotalDays) == x);

                                if (msg != null)
                                {
                                    <td>
                                        <span>@msg.Message</span>
                                    </td>
                                }
                                else
                                {
                                    <td></td>
                                }
                            }
                            else
                            {
                                <td>
                                    <span></span>
                                </td>
                            }

                        }

                    </tr>
                }
            }
            else
            {
                <tr>
                    @for (int x = 0; x <= RANGE; x++)
                    {
                        <td>
                            <span></span>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>