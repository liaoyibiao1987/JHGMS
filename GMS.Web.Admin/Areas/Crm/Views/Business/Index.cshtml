@using GMS.Framework.Contract
@using GMS.Framework.Utility
@using GMS.Framework.Web.Controls
@using GMS.Framework.Contract
@using GMS.Framework.Web.Controls
@using GMS.Crm.Contract
@using GMS.Web
@{
    ViewBag.Title = "业务跟单查询";
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    DateTime endDate = (DateTime)ViewData["endDate"];
    DateTime startDate = (DateTime)ViewData["startDate"];

    double RANGE = ((DateTime)ViewData["endDate"] - (DateTime)ViewData["startDate"]).TotalDays;
}

@model IEnumerable<BusinessVM>

@section PageSpecificStyleSheetIncludes{
    <style type="text/css">
        select {
            margin: 1px;
            width: 150px;
        }

        .error {
            color: red;
            margin-left: 10px;
        }

        #divData th {
            word-break: keep-all;
            word-wrap: inherit;
            min-width: 120px;
        }
    </style>
}

@*@functions
    {
    }*@

@section PageSpecificJavascriptIncludes{
    <script type="text/javascript" src="@Url.StaticFile("/assets/jquery-validation/dist/jquery.validate.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticFile("/assets/js/GMS.js")"></script>

    <script type="text/javascript">

        //$.validator.setDefaults({
        //    submitHandler: function () {
        //        //alert("提交事件!");
        //    }
        //});
        var range = 0;
        $(document).ready(function () {
            var dates = $("#start, #end").datepicker({
                dateFormat: "yy-mm-dd",
                defaultDate: "-7d",
                changeMonth: true,
                numberOfMonths: 2,
                onSelect: function (selectedDate) {
                    var option = this.id == "start" ? "minDate" : "maxDate",
                    instance = $(this).data("datepicker"),
                    date = $.datepicker.parseDate(
                        instance.settings.dateFormat ||
                        $.datepicker._defaults.dateFormat,
                        selectedDate, instance.settings);
                    dates.not(this).datepicker("option", option, date);
                }
            });
            $("#search").validate({
                rules: {
                    start: {
                        required: true,
                        dateISO: true
                    },
                    end: {
                        required: true,
                        dateISO: true
                    }
                },
                messages: {
                    start: {
                        required: "请输入开始时间",
                        dateISO: "请输入正确的时间格式"
                    },
                    end: {
                        required: "请输入结束时间",
                        dateISO: "请输入正确的时间格式"
                    }
                },
                submitHandler: function (form) {
                    //var start = $("#start").datepicker("getDate");
                    //var end = $("#end").datepicker("getDate");
                    $("th[b='bns'],td[b='bns']").detach();
                    //rendHead(start, end);
                    form.submit();
                    //getData(start.format("yyyy-MM-dd"), end.format("yyyy-MM-dd"));
                }
            });
            $('#tbbusiness').dataTable().fnDestroy();
            $("#tbbusiness").DataTable({
                "scrollX": true,
                "scrollY": '70vh',
                "scrollCollapse": true,
                "bServerSide": false,//服务端处理分页
                'bPaginate': true,  //是否分页。
                'bFilter': true,  //是否使用内置的过滤功能
                'bLengthChange': true, //是否允许自定义每页显示条数.
                "bProcessing": true, //DataTables载入数据时，是否显示‘进度’提示
                "bFilter": true, //是否启动过滤、搜索功能
                "oLanguage": { //国际化配置
                    "sProcessing": "正在获取数据，请稍后...",
                    "sLengthMenu": "显示 _MENU_ 条",
                    "sZeroRecords": "没有您要搜索的内容",
                    "sInfo": "从 _START_ 到  _END_ 条记录 总记录数为 _TOTAL_ 条",
                    "sInfoEmpty": "记录数为0",
                    "sInfoFiltered": "(全部记录数 _MAX_ 条)",
                    "sInfoPostFix": "",
                    "sSearch": "搜索",
                    "sUrl": "",
                    "oPaginate": {
                        "sFirst": "第一页",
                        "sPrevious": "上一页",
                        "sNext": "下一页",
                        "sLast": "最后一页"
                    }
                },

                initComplete: function () {
                    this.api().columns().every(function (i) {
                        if (i < 16) {
                            var column = this;
                            debugger;
                            var select = $('<select style="width:100px;" ><option value=""></option></select>').css({ "width": i == 0 ? "150px" : "100px", "z-index": "9" })
                                .appendTo($(column.header()))
                                .on('change', function () {
                                    var val = $.fn.dataTable.util.escapeRegex(
                                       $(this).val()
                                    ).trim();
                                    if (i == 0) {
                                        column.search(val ? val : '', false, true).draw();
                                    }
                                    else {
                                        column.search(val ? '^' + val + '$' : '', true, false).draw();
                                    }
                                }).on("click", function (event) {
                                    event.stopPropagation();
                                });

                            column.data().unique().sort().each(function (d, j) {
                                var val = $(d).text() == "" ? d : $(d).text();
                                if (column.search() === '^' + val + '$') {
                                    select.append('<option value="' + val + '" selected="selected">' + val + '</option>')
                                } else {
                                    select.append('<option value="' + val + '">' + val + '</option>')
                                }
                            });
                        }
                    });
                }
            });
        });

        //function rendHead(start, end) {
        //    range = (end - start) / 86400000;
        //    if (range >= 0) {
        //        var headhtml = "";
        //        for (var i = 0; i <= range; i++) {
        //            headhtml += "<th b='bns'>" + start.dateAdd("d", i).format("M-dd") + "</th>";
        //        }
        //        $(headhtml).appendTo("#tbhead");
        //    }
        //}
        //function getData(dStart, dEnd) {
        //    $.ajax({
        //        "url": "/Crm/Business/Index",
        //        "data":
        //            {
        //                start: dStart,
        //                end: dEnd
        //            },
        //        "success": function (json) {
        //            fnCallback(json, dStart, dEnd);
        //        },
        //        "cache": false,
        //        "type": "POST",
        //        "error": function (xhr, error, thrown) {
        //            if (error == "parsererror") {
        //                alert(oSettings, 0, "DataTables warning: JSON data from " +
        //                    "server could not be parsed. This is caused by a JSON formatting error.");
        //            }
        //        }
        //    });
        //}
        String.prototype.toDate = function () {
            var dateMilliseconds;
            if (isNaN(this)) {
                //使用正则表达式将日期属性中的非数字（\D）删除
                dateMilliseconds = this.replace(/\D/igm, "");
            } else {
                dateMilliseconds = this;
            }
            //实例化一个新的日期格式，使用1970 年 1 月 1 日至今的毫秒数为参数
            return new Date(parseInt(dateMilliseconds));
        };
        //function fnCallback(json, start, end) {
        //    var bodyhtml = "";
        //    $.each(json, function (i, item) {
        //        bodyhtml += "<tr>";
        //        bodyhtml += "<td b='bns' style='font-size:10px;'>" + item.Customer.Name + "</td>";
        //        for (var j = 0; j <= range; j++) {
        //            if (item.Business == null || item.Business.length <= 0) {
        //                bodyhtml += "<td b='bns' style='font-size:10px;'>" + "" + "</td>";
        //            }
        //            else {
        //                for (var i = 0; i < item.Business.length; i++) {
        //                    var creat = item.Business[i].CreateTime.toDate();
        //                    bodyhtml += "<td b='bns' style='font-size:10px;'>" + (creat - start) + "</td>";
        //                    if (creat - start == 86400000 * j) {
        //                        var msg = item.Business[i].Message;
        //                        bodyhtml += "<td b='bns' style='font-size:10px;'>" + item.Business[i].Message + "</td>";
        //                    }
        //                    else {
        //                        bodyhtml += "<td b='bns' style='font-size:10px;'>" + "" + "</td>";
        //                    }
        //                }
        //            }
        //        }
        //        bodyhtml += "</tr>";
        //    });

        //    $(bodyhtml).appendTo("#tbbody");
        //    $('#tbbusiness').dataTable();
        //}
    </script>

}
<div class="row-fluid">
    <div class="span11">
        @using (Html.BeginForm(null, null, null, FormMethod.Post, new { id = "search", @class = "form-inline" }))
        {
            <div class="p5">
                <label>开始时间：</label>@Html.TextBox("start", ((DateTime)ViewData["startDate"]).ToString("yyyy-MM-dd"), new { @class = "m-wrap small" })&nbsp;
                <label>结束时间：</label>@Html.TextBox("end", ((DateTime)ViewData["endDate"]).ToString("yyyy-MM-dd"), new { @class = "m-wrap small" })&nbsp;

                <button type="submit" class="btn">搜索<i class="icon-search"></i></button>
            </div>
        }
    </div>
</div>
<div id="divData" class="row-fluid">
    <table class="table table-striped table-hover" id="tbbusiness">
        <thead>
            <tr id="tbhead">
                <th>
                    <span style="width:200px;display:inline-block">客户名</span>
                </th>
                <th>省份</th>
                <th>城市</th>
                <th>
                    类型
                </th>
                <th>
                    连锁店数量
                </th>
                <th>
                    连锁合作方式
                </th>
                <th>
                    合作渠道
                </th>
                <th>
                    商业类型
                </th>
                <th>
                    是否合作
                </th>
                <th>
                    合作种类
                </th>
                <th>
                    联系人
                </th>
                <th>
                    联系电话
                </th>
                <th>
                    业务员
                </th>
                <th>
                    业务员类型
                </th>
                <th>
                    业务统计<br />(此时间段)
                </th>

                @for (int x = 0; x <= RANGE; x++)
                {
                    <th>
                        <span>@(((DateTime)ViewData["startDate"]).AddDays(x).ToString("yyyy-MM-dd")) </span>
                    </th>
                }

            </tr>
        </thead>
        <tfoot>
            <tr>
                <th>
                    <span style="width:200px;display:inline-block">客户名</span>
                </th>
                <th>省份</th>
                <th>城市</th>
                <th>
                    类型
                </th>
                <th>
                    连锁店数量
                </th>
                <th>
                    连锁合作方式
                </th>
                <th>
                    合作渠道
                </th>
                <th>
                    商业类型
                </th>
                <th>
                    是否合作
                </th>
                <th>
                    合作种类
                </th>
                <th>
                    联系人
                </th>
                <th>
                    联系电话
                </th>
                <th>
                    业务员
                </th>
                <th>
                    业务员类型
                </th>
                <th>
                    业务统计<br />(此时间段)
                </th>

                @for (int x = 0; x <= RANGE; x++)
                {
                    <th>
                        <span>@(((DateTime)ViewData["startDate"]).AddDays(x).ToString("yyyy-MM-dd")) </span>
                    </th>
                }
            </tr>
        </tfoot>
        <tbody id="tbbody">
            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr>
                        @if (item.Customer != null)
                        {
                            <td class="blue">
                                <a class="blue thickbox" style="cursor:pointer" title="点击开始录入跟单信息"
                                   href='@Url.Action("AddByCustomerId", "Business", new { CustomerId = item.Customer.ID })&TB_iframe=true&height=480&width=600'>
                                    @item.Customer.Name
                                </a>
                            </td>
                            <td>
                                @item.Provienc
                            </td>
                            <td class="green">
                                @if (item.Customer.City != null)
                                {
                                    @item.Customer.City.Name
                                }
                            </td>
                            <td>
                                @EnumHelper.GetEnumTitle((EnumCategory)item.Customer.Category)
                            </td>
                            <td>
                                @((item.Customer.ChainCount.HasValue == true && (EnumCategory)item.Customer.Category == EnumCategory.Married) ? item.Customer.ChainCount.Value.ToString() : "无")
                            </td>
                            <td>
                                @((item.Customer.ChainType.HasValue == true) ? EnumHelper.GetEnumTitle((EnumChainType)item.Customer.ChainType) : "无")
                            </td>
                            <td>
                                @item.Customer.ShowChannel
                            </td>
                            <td>
                                @item.Customer.ShowBusinessType
                            </td>
                            <th>
                                @if (item.Customer.CooperationOrNot.HasValue && item.Customer.CooperationOrNot.Value == true)
                                {
                                    new HtmlString("是");
                                }
                                else
                                {
                                    new HtmlString("否");
                                }
                            </th>
                            <td>
                                @item.Customer.CustomerCooperShow
                            </td>
                            <td class="blue">
                                @item.Customer.Contacter
                            </td>
                            <td>
                                @item.Customer.Tel
                            </td>
                            <td class="green">
                                @(item.Customer.Staff == null ? "没有分配" : item.Customer.Staff.Name)
                            </td>
                            <td class="blue">
                                @(item.Customer.Staff == null ? "没有分配" : EnumHelper.GetEnumTitle((GMS.OA.Contract.EnumPosition)item.Customer.Staff.Position))
                            </td>
                            <td class="green">
                                @((item.Business == null || item.Business.Count() == 0) ? "没有业务" : item.Business.Count().ToString() + " 次业务")
                            </td>
                        }
                        else
                        {
                            <td></td>
                        }

                        @for (int x = 0; x <= RANGE; x++)
                        {
                            if (item.Business != null)
                            {
                                var msg = item.Business.FirstOrDefault(o => ((int)(o.CreateTime - startDate).TotalDays) == x);

                                if (msg != null)
                                {
                                    <td>
                                        @msg.Message
                                    </td>
                                }
                                else
                                {
                                    <td></td>
                                }
                            }
                            else
                            {
                                <td></td>
                            }

                        }

                    </tr>
                }
            }
            else
            {
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    @for (int x = 0; x <= RANGE; x++)
                    {
                        <td></td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>